{"remainingRequest":"/Users/selyanya/Desktop/gb_project/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/selyanya/Desktop/gb_project/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/selyanya/Desktop/gb_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/selyanya/Desktop/gb_project/src/components/becomeForm.vue?vue&type=template&id=a696308a&","dependencies":[{"path":"/Users/selyanya/Desktop/gb_project/src/components/becomeForm.vue","mtime":1639998268740},{"path":"/Users/selyanya/Desktop/gb_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/selyanya/Desktop/gb_project/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/selyanya/Desktop/gb_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/selyanya/Desktop/gb_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}